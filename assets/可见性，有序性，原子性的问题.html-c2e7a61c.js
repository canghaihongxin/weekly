const e=JSON.parse('{"key":"v-757e5f8f","path":"/guide/ConcurrentProgramming/%E5%8F%AF%E8%A7%81%E6%80%A7%EF%BC%8C%E6%9C%89%E5%BA%8F%E6%80%A7%EF%BC%8C%E5%8E%9F%E5%AD%90%E6%80%A7%E7%9A%84%E9%97%AE%E9%A2%98.html","title":"可见性、有序性、原子性问题","lang":"zh-CN","frontmatter":{"description":"可见性、有序性、原子性问题 并发编程有什么用？ 毋庸置疑是为了挖掘服务器的潜力，提升程序的性能。但是这又给我们带来了新的问题。 多核CPU 增加了缓存，以均衡与内存的速度差异；导致 可见性问题 编译程序优化指令执行次序，使得缓存能够得到更加合理地利用。导致 有序性问题 进程，线程，分时使用CPU, 以均衡CPU与I/O之间的差异。导致了数据的原子性 学习使用并发编程就是既要提升性能，同时又要避免上面的问题。","head":[["meta",{"property":"og:url","content":"https://github.com/canghaihongxin/weekly/guide/ConcurrentProgramming/%E5%8F%AF%E8%A7%81%E6%80%A7%EF%BC%8C%E6%9C%89%E5%BA%8F%E6%80%A7%EF%BC%8C%E5%8E%9F%E5%AD%90%E6%80%A7%E7%9A%84%E9%97%AE%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"程序员指南"}],["meta",{"property":"og:title","content":"可见性、有序性、原子性问题"}],["meta",{"property":"og:description","content":"可见性、有序性、原子性问题 并发编程有什么用？ 毋庸置疑是为了挖掘服务器的潜力，提升程序的性能。但是这又给我们带来了新的问题。 多核CPU 增加了缓存，以均衡与内存的速度差异；导致 可见性问题 编译程序优化指令执行次序，使得缓存能够得到更加合理地利用。导致 有序性问题 进程，线程，分时使用CPU, 以均衡CPU与I/O之间的差异。导致了数据的原子性 学习使用并发编程就是既要提升性能，同时又要避免上面的问题。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-09T06:56:06.000Z"}],["meta",{"property":"article:author","content":"生活富能量"}],["meta",{"property":"article:modified_time","content":"2023-06-09T06:56:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"可见性、有序性、原子性问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-09T06:56:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"生活富能量\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"headers":[{"level":2,"title":"可见性问题","slug":"可见性问题","link":"#可见性问题","children":[]},{"level":2,"title":"原子性问题","slug":"原子性问题","link":"#原子性问题","children":[]},{"level":2,"title":"有序性问题","slug":"有序性问题","link":"#有序性问题","children":[]}],"git":{"createdTime":1685437571000,"updatedTime":1686293766000,"contributors":[{"name":"tianpeirong","email":"tianpeirong1234","commits":3}]},"readingTime":{"minutes":4.28,"words":1284},"filePathRelative":"guide/ConcurrentProgramming/可见性，有序性，原子性的问题.md","localizedDate":"2023年5月30日","excerpt":"<h1> 可见性、有序性、原子性问题</h1>\\n<p>并发编程有什么用？ 毋庸置疑是为了挖掘服务器的潜力，提升程序的性能。但是这又给我们带来了新的问题。</p>\\n<ul>\\n<li>\\n<p>多核CPU 增加了缓存，以均衡与内存的速度差异；导致 <code>可见性</code>问题</p>\\n</li>\\n<li>\\n<p>编译程序优化指令执行次序，使得缓存能够得到更加合理地利用。导致 <code>有序性</code>问题</p>\\n</li>\\n<li>\\n<p>进程，线程，分时使用CPU, 以均衡CPU与I/O之间的差异。导致了数据的<code>原子性</code></p>\\n</li>\\n</ul>\\n<p>学习使用并发编程就是既要提升性能，同时又要避免上面的问题。</p>","autoDesc":true}');export{e as data};
